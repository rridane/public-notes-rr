:author-url: https://github.com/rridane
:author: rridane
:source-highlighter: rouge
:hardbreaks:
:table-caption!:
:toc: left

.liste des commandes vagrant
[source,bash]
----
vagrant init hashicorp/bionic64 # Initialiser un Vagrantfile basé sur l’image bionic64
vagrant init # Initialiser un Vagrantfile vide (à éditer soi-même)

vagrant up # Démarrer et provisionner la VM
vagrant up --provider=virtualbox # Forcer l’utilisation d’un provider (virtualbox, libvirt, vmware, etc.)
vagrant up node1 # Démarrer uniquement la machine définie "node1"

vagrant halt # Éteindre proprement la VM
vagrant halt node1 # Éteindre uniquement node1
vagrant halt -f # Éteindre brutalement (poweroff)

vagrant reload # Redémarrer la VM en relisant le Vagrantfile
vagrant reload --provision # Redémarrer + relancer le provisionnement

vagrant suspend # Suspendre la VM (sauvegarde l’état en RAM → disque)
vagrant resume # Reprendre une VM suspendue

vagrant destroy # Supprimer complètement la VM (disque inclus)
vagrant destroy -f # Supprimer sans confirmation
vagrant destroy node1 # Supprimer uniquement node1

vagrant status # Afficher l’état des VM (running, poweroff, suspended, not created)
vagrant global-status # Afficher toutes les VM Vagrant sur la machine (même hors dossier courant)
vagrant global-status --prune # Nettoyer les références obsolètes

vagrant ssh # Se connecter en SSH sur la VM par défaut
vagrant ssh node1 # Se connecter sur la VM "node1"
vagrant ssh -c "uptime" # Exécuter une commande via SSH sans ouvrir de shell

vagrant provision # Relancer le provisionnement sans redémarrer la VM
vagrant provision node1 --provision-with=shell # Relancer uniquement le provisionneur shell sur node1

vagrant box list # Lister les box téléchargées localement
vagrant box add ubuntu/focal64 # Télécharger une box depuis Vagrant Cloud
vagrant box add mybox.box --name custom/mybox # Ajouter une box depuis un fichier local
vagrant box remove ubuntu/focal64 # Supprimer une box
vagrant box outdated # Vérifier si la box utilisée est à jour
vagrant box update # Mettre à jour la box utilisée dans le projet

vagrant plugin list # Lister les plugins installés
vagrant plugin install vagrant-env # Installer un plugin
vagrant plugin uninstall vagrant-env # Désinstaller un plugin

vagrant snapshot list # Lister les snapshots existants
vagrant snapshot save init_state # Sauvegarder un snapshot de la VM courante
vagrant snapshot restore init_state # Restaurer un snapshot existant
vagrant snapshot delete init_state # Supprimer un snapshot

vagrant share # Partager temporairement la VM via un tunnel HashiCorp (devenu obsolète)
vagrant connect # Se connecter à une VM partagée (via vagrant share)

vagrant package --output mybox.box # Exporter la VM en box réutilisable
vagrant package --base vm-name --output mybox.box # Exporter depuis une VM VirtualBox existante

vagrant reload --provision # Redémarrer et relancer le provisionnement
vagrant ssh-config # Afficher la configuration SSH (utile pour ssh natif ou Ansible)
vagrant validate # Vérifier la syntaxe du Vagrantfile
----
